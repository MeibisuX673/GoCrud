definitions:
  auth.JwtToken:
    properties:
      token:
        type: string
      type:
        type: string
    type: object
  auth.UserAuth:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  errorResponse.Error:
    properties:
      desscription:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  product.CreateProductJson:
    properties:
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      userId:
        type: integer
    required:
    - name
    - price
    - quantity
    - userId
    type: object
  product.ProductJsonResponse:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      user:
        $ref: '#/definitions/user.UserJsonResponse'
    type: object
  product.UpdateJsonProduct:
    properties:
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  user.UserJsonResponse:
    properties:
      createdAt:
        type: string
      email:
        type: string
      firstName:
        type: string
      id:
        type: integer
      lastName:
        type: string
      phone:
        type: string
    type: object
info:
  contact: {}
  title: Scout Collector
  version: 1.0.0
paths:
  /products:
    get:
      consumes:
      - application/json
      description: Get Collection Products
      parameters:
      - description: name
        in: query
        name: filter[name][eq]
        type: string
      - description: name
        in: query
        name: filter[name][includes]
        type: string
      - description: DESC/ASC
        in: query
        name: order[name]
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product.ProductJsonResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorResponse.Error'
      security:
      - ApiKeyAuth: []
      summary: Get Collection Products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create Product
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/product.CreateProductJson'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.ProductJsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorResponse.Error'
      security:
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete Product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorResponse.Error'
      security:
      - ApiKeyAuth: []
      summary: Delete Product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get One Product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product.ProductJsonResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorResponse.Error'
      security:
      - ApiKeyAuth: []
      summary: Get One Product
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update Product
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/product.UpdateJsonProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.ProductJsonResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorResponse.Error'
      security:
      - ApiKeyAuth: []
      summary: Update Product
      tags:
      - products
  /token:
    post:
      consumes:
      - application/json
      description: Get JWT
      parameters:
      - description: body
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/auth.UserAuth'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/auth.JwtToken'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorResponse.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorResponse.Error'
      summary: Get JWT
      tags:
      - token
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
